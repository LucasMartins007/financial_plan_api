name: 3 - MASTER - Create Release

on:
  pull_request:
    branches: [ master ]
    types: [ closed ]

jobs:

  Create_Release:
    name: Create Release on PR to Master
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Fetch last tag
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: git tag

      - name: Get latest tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 HEAD 2>/dev/null || echo "")
          echo "::set-output name=latest_tag::${latest_tag}"

      - name: Set initial version if no tags found
        id: set_initial_version
        if: steps.get_tag.outputs.latest_tag == ''
        run: echo "::set-output name=latest_tag::v0.0.0"

      - name: Determine next version
        id: determine_next_version
        run: |
          current_tag=${{ steps.get_tag.outputs.latest_tag }}
          if [[ -z "$current_tag" || "$current_tag" == "" ]]; then
            next_version="v0.0.0"
          else
            # Extract major, minor, and patch versions from the current tag
            version_parts=(${current_tag//./ })
            major=${version_parts[0]}
            minor=${version_parts[1]}
            patch=${version_parts[2]}

            # Increment the version based on semantic versioning rules
            if [[ $patch == 9 ]]; then
              patch=0
              if [[ $minor == 9 ]]; then
                minor=0
                major=$((major + 1))
              else
                minor=$((minor + 1))
              fi
            else
              patch=$((patch + 1))
            fi

            # Format the next version
            next_version="v${major}.${minor}.${patch}"
          fi
          echo "::set-output name=next_version::${next_version}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: ${{ steps.determine_next_version.outputs.next_version }}
          release_name: ${{ steps.determine_next_version.outputs.next_version }}
          body: |
            Changes introduced by ${{ steps.determine_next_version.outputs.next_version }}:
            - Description of changes...
          draft: false
          prerelease: false