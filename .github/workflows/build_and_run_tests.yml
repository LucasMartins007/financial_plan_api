name: Maven Build And Run Test

on:
  push:
    branches: [
      feature/**,
      fix/**
    ]

jobs:
  Build_Artifact:
    name: Build Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean install -DskipTests=true

  Run_Unit_Tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: [ Build_Artifact ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Unit Tests
        run: mvn test

  Save_Artifact:

    name: Save JAR Artifact
    runs-on: ubuntu-latest
    needs: [ Run_Unit_Tests ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      - name: Save JAR Artifact
        run: |
          # Define as variáveis
          BASE_BRANCH="develop"
          HEAD_BRANCH=${{ github.head_ref }}
          PR_TITLE="Auto-generated PR for branch ${{ github.head_ref }} into develop."
          PR_BODY="This PR was automatically created because of a new commit to branch ${{ github.head_ref }}."
          
          # Obtém o token de acesso do GitHub
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          
          # Cria o corpo do payload para a API do GitHub
          payload='{
            "title": "'"$PR_TITLE"'",
            "body": "'"$PR_BODY"'",
            "head": "'"$HEAD_BRANCH"'",
            "base": "'"$BASE_BRANCH"'"
          }'
          
          # Faz a chamada para a API do GitHub para criar o pull request
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "$payload" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls"
        uses: actions/upload-artifact@v2
        with:
          name: financial_planning-${{ github.run_number }}
          path: target/*.jar


